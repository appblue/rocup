#!/bin/bash

version=${1:-1}
ROCUP_HOME=${ROCUP_HOME:-$HOME/.rocup}

# simple parameter validation
if [ "$version" -eq "$version" ] 2>/dev/null; then
    if [ $version -lt 1 ]; then
        echo "usage: $0 [version]"
        echo "  version: positive integer, default 1"
        exit 1
    fi
else
    echo "usage: $0 [version]"
    echo "  version: positive integer, default 1"
    exit 1
fi

if [ "$(uname -s)" == "Darwin" -a "$(uname -m)" == "arm64" ]; then
    echo ".. apple silicon mac detected"
    platform_url='https://github.com/roc-lang/roc/releases/download/nightly/roc_nightly-macos_apple_silicon-latest.tar.gz'
elif [ "$(uname -s)" == "Darwin" -a "$(uname -m)" == "x86_64" ]; then
    echo ".. apple intel mac detected"
    platform_url='https://github.com/roc-lang/roc/releases/download/nightly/roc_nightly-macos_x86_64-latest.tar.gz'
elif [ "$(uname -s)" == "Linux" -a "$(uname -m)" == "x86_64" ]; then
    echo ".. linux x86_64 detected"
    platform_url='https://github.com/roc-lang/roc/releases/download/nightly/roc_nightly-linux_x86_64-latest.tar.gz'
fi

echo ".. downloading latest release of the Roc compiler"
( cd $ROCUP_HOME ; curl -sOL "${platform_url}" )
name=$( cd $ROCUP_HOME ; ls -rt roc_nightly*.tar.gz | tail -1 )

echo ".. extracting: $name"
( cd $ROCUP_HOME ; tar xzf $name )

echo ".. trying to install nth latest local version (n = $version)"
echo
echo ".. list locally available versions - with selecion marked '->'"
echo "   -----------------------------------------------------------"
( cd $ROCUP_HOME ; ls -t ~/.rocup/roc_*/roc | awk -vver=${version} '{ if (NR==ver) {print " -> ", $0} else {print "    ", $0}}' )

if [ $( ls -rt $ROCUP_HOME/roc_*/roc | sed 's;/roc$;;' | wc -l ) -ge $version ]; then
    echo
    echo ".. creating local symlink to selected downloaded version"
    ( cd $ROCUP_HOME;  rm -f roc )
    ( cd $ROCUP_HOME ; ln -s $( ls -rt $ROCUP_HOME/roc_*/roc | tail -${version} | head -1 | sed 's;/roc$;;' ) roc )

    if [ ! \( -L /usr/local/bin/roc \
        -a -L /usr/local/bin/roc_language_server \
        -a -L /usr/local/bin/rocup \) ]; then
    	echo ".. attempting to create symlinks in /usr/local/bin"
    	read -r -p ".. are you sure you want to overwrite rocup, roc and roc_language_server in /usr/local/bin? [y/N] " REPLY
    	echo
    	if [[ ! "$REPLY" =~ ^([yY][eE][sS]|[yY])$ ]]; then
            echo ".. aborting"
            exit 1
        fi
        sudo ln -sf $ROCUP_HOME/rocup /usr/local/bin/rocup
        sudo ln -sf $ROCUP_HOME/roc/roc /usr/local/bin/roc
    	sudo ln -sf $ROCUP_HOME/roc/roc_language_server /usr/local/bin/roc_language_server
    fi
    echo ".. installation complete"
    echo ".. .. rocup tool is now available in /usr/local/bin/rocup"
    echo ".. .. roc compiler is now available in /usr/local/bin/roc"
    echo ".. .. roc language server is now available in /usr/local/bin/roc_language_server"
    echo ".. .. roc compiler version: $(roc version)"
else
    echo ".. requested version not available locally"
    echo ".. installation failed"
    exit 1
fi
